{
  "hash": "e9a9b19d6035eaeddeba1f0bd46da82b",
  "result": {
    "markdown": "---\ntitle: \"How to plot AIMS eReefs data with R\"\nexecute:\n  echo: true\n  warning: false\n---\n\n\n::: {.callout-note}\nWe have a new set of tutorials on our \\\"eReefs Tutorials\\\"\nwebpage. Please see <https://open-aims.github.io/ereefs-tutorials/> for\nmore information.\n:::\n\nThis tutorial is based on the article [How to open and work with NetCDF\ndata in R](https://rpubs.com/boyerag/297592).\n\nYou can download the source code for this example from the [GitHub\nrepository](https://github.com/aims-ks/ereefs-r-scripts). If you are\ninterested in accessing the raw eReefs model data you can use [Barbara\nRobson\\'s](https://www.aims.gov.au/our-people/dr-barbara-robson) R\npackage [eReefs](https://github.com/AIMS/ereefs) (see [R package to\nfacilitate extracting and visualising eReefs model output\ndata](https://research.csiro.au/ereefs/models/models-about/r-package-plotting-ereefs-data/)\nfor more information).\n\nLoad the required R packages\n----------------------------\n\nFirst of all, load the necessary libraries.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ncdf4) # package for netcdf manipulation\nlibrary(raster) # package for raster manipulation\nlibrary(ggplot2) # package for plotting\nlibrary(rgdal) # package for geospatial analysis\n```\n:::\n\n\nDefine which data to plot\n-------------------------\n\nIn this section we define which data we want to read and plot.\n\n-   **inputFile**\\\n    The netCDF input file. This can either be a downloaded file (see\n    [How to manually download derived data from\n    THREDDS](https://ereefs.aims.local/ereefs-aims/help/how-to-manually-download-derived-data))\n    or a OPeNDAP URL from the [AIMS THREDDS\n    server](https://thredds.ereefs.aims.gov.au/). For this tutorial we\n    are using the OPeNDAP URL for the file\n    \"EREEFS\\_AIMS-CSIRO\\_gbr4\\_v2\\_hydro\\_daily-monthly-2010-09.nc\".\n\n-   **selectedVariable**\\\n    The name of the variable in the netCDF file.\n\n-   **selectedTimeIndex**\\\n    The time slice in the netCDF file. For example, in the netCDF file\n    \"EREEFS\\_AIMS-CSIRO\\_gbr4\\_v2\\_hydro\\_daily-monthly-2010-09.nc\" the\n    time steps are \"days\". This means if you select\n    `selectedTimeIndex=2` it refers to the second day in this file,\n    which is 02/09/2010.\n\n-   **selectedDepthIndex**\\\n    The depth slice in the netCDF file. See the following table for a\n    mapping of index to value:\n\n        Index (k)   Hydrodynamic 1km model   Hydrodynamic and BioGeoChemical 4km model\n      ----------- ------------------------ -------------------------------------------\n                1                -140.00 m                                   -145.00 m\n                2                -120.00 m                                   -120.00 m\n                3                -103.00 m                                   -103.00 m\n                4                 -88.00 m                                    -88.00 m\n                5                 -73.00 m                                    -73.00 m\n                6                 -60.00 m                                    -60.00 m\n                7                 -49.00 m                                    -49.00 m\n                8                 -39.50 m                                    -39.50 m\n                9                 -31.00 m                                    -31.00 m\n               10                 -24.00 m                                    -23.75 m\n               11                 -18.00 m                                    -17.75 m\n               12                 -13.00 m                                    -12.75 m\n               13                  -9.00 m                                     -8.80 m\n               14                  -5.25 m                                     -5.55 m\n               15                  -2.35 m                                     -3.00 m\n               16                  -0.50 m                                     -1.50 m\n               17                      n/a                                     -0.50 m\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# OPeNDAP URL to file \"EREEFS_AIMS-CSIRO_gbr4_v2_hydro_daily-monthly-2010-09.nc\". Hydrodynamic 4km model, daily data for the month September 2010\ninput_file <- \"https://thredds.ereefs.aims.gov.au/thredds/dodsC/s3://aims-ereefs-public-prod/derived/ncaggregate/ereefs/gbr4_v2/daily-monthly/EREEFS_AIMS-CSIRO_gbr4_v2_hydro_daily-monthly-2010-09.nc\"\ninput_file\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"https://thredds.ereefs.aims.gov.au/thredds/dodsC/s3://aims-ereefs-public-prod/derived/ncaggregate/ereefs/gbr4_v2/daily-monthly/EREEFS_AIMS-CSIRO_gbr4_v2_hydro_daily-monthly-2010-09.nc\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# The \"temperature\" variable\nselectedVariable <- \"temp\"\nselectedVariable\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"temp\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 2nd of September 2010\nselectedTimeIndex <- 2\nselectedTimeIndex\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# -1.50 m depth\nselectedDepthIndex <- 16\nselectedDepthIndex\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 16\n```\n:::\n:::\n\n\nRead in the netCDF file contents\n--------------------------------\n\nRead in the netCDF file contents and store the latitude, longitude, time\nand depth data in variables for later use.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnc_data <- nc_open(input_file)\n\nlon <- ncvar_get(nc_data, \"longitude\")\nhead(lon) # look at the first few entries in the longitude vector\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 142.1688 142.1988 142.2288 142.2588 142.2888 142.3188\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlat <- ncvar_get(nc_data, \"latitude\")\nhead(lat) # look at the first few entries in the latitude vector\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -28.69602 -28.66602 -28.63602 -28.60602 -28.57602 -28.54602\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntime <- ncvar_get(nc_data, \"time\")\nhead(time) # look at the first few entries in the time vector\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 7548 7549 7550 7551 7552 7553\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndepth <- ncvar_get(nc_data, \"zc\")\nhead(depth) # look at the first few entries in the depth vector\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -145 -120 -103  -88  -73  -60\n```\n:::\n:::\n\n\nRead in the data from the selected variable and select the time and\ndepth slice.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvariableData.slice <- ncvar_get(\n  nc=nc_data,\n  varid=selectedVariable,\n  start = c(1, 1, selectedDepthIndex, selectedTimeIndex),\n  count = c(length(lon), length(lat), 1, 1))\ndim(variableData.slice) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 491 723\n```\n:::\n:::\n\n\nNow that all data is stored in memory, close the netCDF file.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnc_close(nc_data)\nprint(\"file closed\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"file closed\"\n```\n:::\n:::\n\n\nPrepare data\n------------\n\nSave the data in a raster. We also need to transpose and flip to orient\nthe data correctly.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nr <- raster(\n  t(variableData.slice), \n  xmn=min(lon), \n  xmx=max(lon), \n  ymn=min(lat), \n  ymx=max(lat), \n  crs=CRS(\"+init=epsg:4326\")\n)\nr <- flip(r, direction='y')\ndim(r)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 723 491   1\n```\n:::\n:::\n\n\nPlotting\n--------\n\nFinally plot the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(r)\n```\n\n::: {.cell-output-display}\n![](how-to-plot-aims-ereefs-data-with-r_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "how-to-plot-aims-ereefs-data-with-r_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}